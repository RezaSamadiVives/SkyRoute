@model SkyRoute.ViewModels.FlightSearchResultVM

@{
    ViewData["Title"] = "Vluchten zoeken resultaat";
}

<main>
    @Html.AntiForgeryToken()
    <input type="hidden" id="AdultCount" value="@Model.FormModel?.AdultPassengers" />
    <input type="hidden" id="KidsCount" value="@(Model.FormModel?.KidsPassengers ?? 0)" />
    <input type="hidden" name="SelectedTripClass" value="@Model.FormModel?.SelectedTripClass" />
    <input type="hidden" name="SelectedTripType" value="@Model.FormModel?.SelectedTripType" />
    <input type="hidden" name="IsRetour" value="@(Model.FormModel?.IsRetour.ToString().ToLower())" />



    <div class="container py-5">
        @await Html.PartialAsync("_BookingWizard", "vlucht")
        @await Component.InvokeAsync("FlightSearchForm", new
        {
            formController = "FlightSearch",
                formAction = "FlightSearchResults",
                model = Model.FormModel
                })
        <hr />

        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger">
                <ul>
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <li>@error.ErrorMessage</li>
                    }
                </ul>
            </div>
        }

        <h2 class="mb-4">Heenvluchten</h2>

        @if (Model.OutboundFlights is not null && Model.OutboundFlights.Any())
        {
            <div class="row g-4">
                @foreach (var segment in Model.OutboundFlights)
                {
                    var isSelected = segment.SegmentId.ToString().Equals(Model.SelectedOutboundSegment.ToString());
                    @await Html.PartialAsync("_FlightSeachResultPartial", segment, new ViewDataDictionary(ViewData)
                    {
                        { "TripType", "outbound" },
                        { "SelectedTripClass", Model.FormModel?.SelectedTripClass.ToString()?.ToLower() },
                        {"selected", isSelected}
                        })
                        }
            </div>
        }
        else
        {
            <p class="text-muted">Geen heenvluchten gevonden.</p>
        }

        <!-- Als retour ook nodig is -->
        @if (Model.ReturnFlights is not null && Model.ReturnFlights.Any())
        {
            <h2 class="mt-5 mb-4">Terugvluchten</h2>

            <div class="row g-4">
                @foreach (var segment in Model.ReturnFlights)
                {
                    var isSelected = segment.SegmentId.ToString().Equals(Model.SelectedRetourSegment.ToString());
                    @await Html.PartialAsync("_FlightSeachResultPartial", segment, new ViewDataDictionary(ViewData)
                    {
                        { "TripType", "return" },
                        { "SelectedTripClass", Model.FormModel?.SelectedTripClass.ToString()?.ToLower() },
                         {"selected", isSelected}
                    })

                        }
            </div>
        }

        <div class="mt-4">
            <a id="bookFlightBtn" class="btn btn-primary disabled"
                href="@Url.Action("Index", "Passengers", new { passengersCount = (Model.FormModel?.AdultPassengers ?? 0) + (Model.FormModel?.KidsPassengers ?? 0) })">
                Verder met boeken
            </a>
        </div>

    </div>

</main>
@section Scripts {
    <script src="~/js/flightSearchForm.js?v=@DateTime.Now.Ticks"></script>
    <script src="~/js/flightSearchResult.js?v=@DateTime.Now.Ticks"></script>
}